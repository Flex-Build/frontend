/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { FlexBuild, FlexBuildInterface } from "../FlexBuild";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "component_id",
        type: "uint256",
      },
    ],
    name: "ComponentBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "code_hash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "ComponentCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "buyComponents",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code_hash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createComponent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getComponents",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "code_hash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FlexBuild.Component[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "id_to_component",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "code_hash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "id_to_order",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "component_id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008055600060025534801561001957600080fd5b50611418806100296000396000f3fe60806040526004361061004a5760003560e01c8063366bd2f11461004f5780636b0cab061461007857806399d50d5d14610094578063c1a0d47f146100bf578063c74fd897146100fd575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610a93565b61013d565b005b610092600480360381019061008d9190610be6565b61025b565b005b3480156100a057600080fd5b506100a96104dd565b6040516100b69190610e2a565b60405180910390f35b3480156100cb57600080fd5b506100e660048036038101906100e19190610e4c565b610721565b6040516100f4929190610e97565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190610e4c565b610765565b6040516101349493929190610f0a565b60405180910390f35b3360036000600254815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260036000600254815260200190815260200160002060010190816101b99190611169565b5081600360006002548152602001908152602001600020600201819055508060036000600254815260200190815260200160002060030190816101fc9190611169565b507f52a1677497d9a86d680489d680b3c592a083f92cb49df1c2ba2a3c96e05159943384846002548560405161023695949392919061123b565b60405180910390a160026000815480929190610251906112cb565b9190505550505050565b6000805b82518110156102b9576003600084838151811061027f5761027e611313565b5b6020026020010151815260200190815260200160002060020154826102a49190611342565b915080806102b1906112cb565b91505061025f565b508034146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f3906113c2565b60405180910390fd5b60005b82518110156104d85733600160008054815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082818151811061037157610370611313565b5b6020026020010151600160008054815260200190815260200160002060010181905550600360008483815181106103ab576103aa611313565b5b6020026020010151815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003600086858151811061041557610414611313565b5b60200260200101518152602001908152602001600020600201549081150290604051600060405180830381858888f1935050505015801561045a573d6000803e3d6000fd5b507fc2a9d06018ac4186f00bea3f072175fda7c50c43f0729a0e59d70e4d64da727f338483815181106104905761048f611313565b5b60200260200101516040516104a6929190610e97565b60405180910390a16000808154809291906104c0906112cb565b919050555080806104d0906112cb565b9150506102ff565b505050565b6060600060025467ffffffffffffffff8111156104fd576104fc610932565b5b60405190808252806020026020018201604052801561053657816020015b6105236108c5565b81526020019060019003908161051b5790505b50905060005b60025481101561071957600360008281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546105ca90610f8c565b80601f01602080910402602001604051908101604052809291908181526020018280546105f690610f8c565b80156106435780601f1061061857610100808354040283529160200191610643565b820191906000526020600020905b81548152906001019060200180831161062657829003601f168201915b505050505081526020016002820154815260200160038201805461066690610f8c565b80601f016020809104026020016040519081016040528092919081815260200182805461069290610f8c565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b5050505050815250508282815181106106fb576106fa611313565b5b60200260200101819052508080610711906112cb565b91505061053c565b508091505090565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546107ae90610f8c565b80601f01602080910402602001604051908101604052809291908181526020018280546107da90610f8c565b80156108275780601f106107fc57610100808354040283529160200191610827565b820191906000526020600020905b81548152906001019060200180831161080a57829003601f168201915b50505050509080600201549080600301805461084290610f8c565b80601f016020809104026020016040519081016040528092919081815260200182805461086e90610f8c565b80156108bb5780601f10610890576101008083540402835291602001916108bb565b820191906000526020600020905b81548152906001019060200180831161089e57829003601f168201915b5050505050905084565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096a82610921565b810181811067ffffffffffffffff8211171561098957610988610932565b5b80604052505050565b600061099c610903565b90506109a88282610961565b919050565b600067ffffffffffffffff8211156109c8576109c7610932565b5b6109d182610921565b9050602081019050919050565b82818337600083830152505050565b6000610a006109fb846109ad565b610992565b905082815260208101848484011115610a1c57610a1b61091c565b5b610a278482856109de565b509392505050565b600082601f830112610a4457610a43610917565b5b8135610a548482602086016109ed565b91505092915050565b6000819050919050565b610a7081610a5d565b8114610a7b57600080fd5b50565b600081359050610a8d81610a67565b92915050565b600080600060608486031215610aac57610aab61090d565b5b600084013567ffffffffffffffff811115610aca57610ac9610912565b5b610ad686828701610a2f565b9350506020610ae786828701610a7e565b925050604084013567ffffffffffffffff811115610b0857610b07610912565b5b610b1486828701610a2f565b9150509250925092565b600067ffffffffffffffff821115610b3957610b38610932565b5b602082029050602081019050919050565b600080fd5b6000610b62610b5d84610b1e565b610992565b90508083825260208201905060208402830185811115610b8557610b84610b4a565b5b835b81811015610bae5780610b9a8882610a7e565b845260208401935050602081019050610b87565b5050509392505050565b600082601f830112610bcd57610bcc610917565b5b8135610bdd848260208601610b4f565b91505092915050565b600060208284031215610bfc57610bfb61090d565b5b600082013567ffffffffffffffff811115610c1a57610c19610912565b5b610c2684828501610bb8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8682610c5b565b9050919050565b610c9681610c7b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cd6578082015181840152602081019050610cbb565b60008484015250505050565b6000610ced82610c9c565b610cf78185610ca7565b9350610d07818560208601610cb8565b610d1081610921565b840191505092915050565b610d2481610a5d565b82525050565b6000608083016000830151610d426000860182610c8d565b5060208301518482036020860152610d5a8282610ce2565b9150506040830151610d6f6040860182610d1b565b5060608301518482036060860152610d878282610ce2565b9150508091505092915050565b6000610da08383610d2a565b905092915050565b6000602082019050919050565b6000610dc082610c2f565b610dca8185610c3a565b935083602082028501610ddc85610c4b565b8060005b85811015610e185784840389528151610df98582610d94565b9450610e0483610da8565b925060208a01995050600181019050610de0565b50829750879550505050505092915050565b60006020820190508181036000830152610e448184610db5565b905092915050565b600060208284031215610e6257610e6161090d565b5b6000610e7084828501610a7e565b91505092915050565b610e8281610c7b565b82525050565b610e9181610a5d565b82525050565b6000604082019050610eac6000830185610e79565b610eb96020830184610e88565b9392505050565b600082825260208201905092915050565b6000610edc82610c9c565b610ee68185610ec0565b9350610ef6818560208601610cb8565b610eff81610921565b840191505092915050565b6000608082019050610f1f6000830187610e79565b8181036020830152610f318186610ed1565b9050610f406040830185610e88565b8181036060830152610f528184610ed1565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fa457607f821691505b602082108103610fb757610fb6610f5d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261101f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fe2565b6110298683610fe2565b95508019841693508086168417925050509392505050565b6000819050919050565b600061106661106161105c84610a5d565b611041565b610a5d565b9050919050565b6000819050919050565b6110808361104b565b61109461108c8261106d565b848454610fef565b825550505050565b600090565b6110a961109c565b6110b4818484611077565b505050565b5b818110156110d8576110cd6000826110a1565b6001810190506110ba565b5050565b601f82111561111d576110ee81610fbd565b6110f784610fd2565b81016020851015611106578190505b61111a61111285610fd2565b8301826110b9565b50505b505050565b600082821c905092915050565b600061114060001984600802611122565b1980831691505092915050565b6000611159838361112f565b9150826002028217905092915050565b61117282610c9c565b67ffffffffffffffff81111561118b5761118a610932565b5b6111958254610f8c565b6111a08282856110dc565b600060209050601f8311600181146111d357600084156111c1578287015190505b6111cb858261114d565b865550611233565b601f1984166111e186610fbd565b60005b82811015611209578489015182556001820191506020850194506020810190506111e4565b868310156112265784890151611222601f89168261112f565b8355505b6001600288020188555050505b505050505050565b600060a0820190506112506000830188610e79565b81810360208301526112628187610ed1565b90506112716040830186610e88565b61127e6060830185610e88565b81810360808301526112908184610ed1565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112d682610a5d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113085761130761129c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061134d82610a5d565b915061135883610a5d565b92508282019050808211156113705761136f61129c565b5b92915050565b7f746f74616c20707269636520646f65736e2774206d6174636800000000000000600082015250565b60006113ac601983610ec0565b91506113b782611376565b602082019050919050565b600060208201905081810360008301526113db8161139f565b905091905056fea2646970667358221220e7c93cd5008324ac709a1d3065aeb3339523adc0e7490663e47e5b31c40455e164736f6c63430008110033";

type FlexBuildConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlexBuildConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlexBuild__factory extends ContractFactory {
  constructor(...args: FlexBuildConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlexBuild> {
    return super.deploy(overrides || {}) as Promise<FlexBuild>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FlexBuild {
    return super.attach(address) as FlexBuild;
  }
  override connect(signer: Signer): FlexBuild__factory {
    return super.connect(signer) as FlexBuild__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlexBuildInterface {
    return new utils.Interface(_abi) as FlexBuildInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlexBuild {
    return new Contract(address, _abi, signerOrProvider) as FlexBuild;
  }
}
